@using GridMvc.Html
@using GridMvc.Sorting
@using StoreManagement.Data.Entities
@using StoreManagement.Data.GeneralHelper
@model List<StoreManagement.Data.Entities.UserProfile>
@{
    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? 50 : pageSizeNumber;
    bool isSuperAdmin = false;

    try
    {
        isSuperAdmin = User.Identity.IsAuthenticated && Roles.GetRolesForUser(User.Identity.Name).Contains("SuperAdmin");
    }
    catch (Exception ex)
    {

    }

}

<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="text-muted bootstrap-admin-box-title">
                <h4>Users Management</h4>
            </div>

        </div>
        <div class="bootstrap-admin-panel-content">


            @if (isSuperAdmin)
            {
                <div>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-lg btn-block" })
                </div>
                <div>
                    @Html.Action("StoresFilter", "Stores", new { actionName = "Index", controllerName = "StoreUsers" })
                </div>
                
            }


            <div class="row">
                <span class="col-md-3">
                    @Html.ActionLink("Create", "SaveOrEditStoreUser", isSuperAdmin ? "Stores" : "StoreUsers", new { userId = 0 }, new { @class = "btn btn-primary btn-block glyphicon glyphicon-plus" })
                </span>
                <span class="col-md-9">
                    @Html.Partial("pSearchForm")
                </span>
            </div>


            <div class="panel panel-primary">
                <div class="panel-heading">
                    <div class="row">
                        <span class="col-md-6">
                            <span class="label "><span class="badge text-danger text-large">@Model.Count() </span>
                                Records exists  
                            </span>

                        </span>
                        <span class="col-md-3">
                            <p class=" text-right">Grid Paging Number</p>
                        </span>
                        <span class="col-md-3">
                            <select name="GridListItemSize" class="form-control dropdown-toggle" id="GridListItemSize">
                                <option class="text-info" value="25">25</option>
                                <option selected="selected" class="text-info" value="50">50</option>
                                <option class="text-info" value="100">100</option>
                                <option class="text-info" value="250">250</option>
                                <option class="text-info" value="500">500</option>
                                <option class="text-info" value="1000">1000</option>
                            </select>
                        </span>
                    </div>

                </div>

                @Html.Grid(Model).Named("userGrid").Columns(columns =>
    {


        columns.Add().Encoded(false).
            Sanitized(false).
            SetWidth(10).
            RenderValueAs(o => String.Format("<input gridkey-id='{0}'  name='checkboxGrid' type='checkbox'>", o.UserId));


        columns.Add(o => o.UserId, true);

        columns.Add()
                  .Encoded(false)
                  .Sanitized(false)
                  .SetWidth(30)
                  .RenderValueAs(d =>
                      @<b>
                           @Html.ActionLink(" ", "StoreUserDetail", isSuperAdmin ? "Stores" : "StoreUsers", new { userId = d.UserId }, new { @class = "btn btn-default btn-sm     glyphicon glyphicon-eye-open" })
                       </b>);

        columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d =>
@<b>
    @Html.ActionLink(" ", "DeleteStoreUser", isSuperAdmin ? "Stores" : "StoreUsers",
    new { userName = d.UserName },
    new
    {
        @class = "btn btn-danger btn-sm glyphicon glyphicon-remove glyphicon-white",
        @onclick = String.Format("return confirm('Do you want to delete user {0}')", d.UserName)
    })
</b>);


        columns.Add(c => c.UserName)
            .Titled("UserName");

        columns.Add(c => c.FirstName)
                    .Titled("FirstName");


        columns.Add(c => c.LastName)
                    .Titled("LastName");


        columns.Add(c => c.PhoneNumber)
                    .Titled("PhoneNumber");

        columns.Add()
                  .Titled("Roles")
                  .Sortable(true).
                  RenderValueAs(o => String.Join(",", Roles.GetRolesForUser(o.UserName)))
                  .SortInitialDirection(GridSortDirection.Descending);

        columns.Add(o => o.CreatedDate)
              .Titled("Date")
              .Sortable(true).
              RenderValueAs(o => String.Format("{0}", o.CreatedDate.HasValue ? o.CreatedDate.Value.ToShortDateString() : ""))
              .SortInitialDirection(GridSortDirection.Descending);



    }).SetRowCssClasses(item => item.UserId % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)


            </div>

        </div>
    </div>
</div>

