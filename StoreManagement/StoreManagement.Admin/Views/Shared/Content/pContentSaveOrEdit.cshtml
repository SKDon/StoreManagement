@model StoreManagement.Data.Entities.Content

@{

    int storeId = Model != null ? Model.StoreId : 0;
    String categoryType = Model.Type;
}



@Html.Partial("_LeftMenu")

<div class="col-md-10">
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">Products</div>
            </div>
            <div class="bootstrap-admin-panel-content">
                <h2>Create New Products</h2>
                <input type="hidden" value="@categoryType" id="categoryType"/>


                <div id="categoryTree">
                </div>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>
                        <legend>Content</legend>

                        <div class="editor-label control-group">
                            @Html.LabelFor(model => model.StoreId, new { @class = "control-label" })
                        </div>
                        <div class="editor-field controls">
                            @Html.Action("StoresDropDown", "Stores", new { storeId })
                        </div>


                        @Html.HiddenFor(model => model.Id)

                        @Html.HiddenFor(model => model.Type)


                        <div class="editor-label">
                            <b>Selected Category
                            </b>
                        </div>
                        <div class="editor-field">
                            @Html.HiddenFor(model => model.CategoryId)
                            <span class="label label-success" id="SelectedCategory"></span>
                        </div>


                        <div class="editor-label">
                            @Html.LabelFor(model => model.Name)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Description)
                        </div>



                        <div class="editor-field">
                            <div id="contentImages"></div>
                            <div id="existingContentImages"></div>
                            @Html.Action("ImageGallery", "FileManager")
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.MainPage)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.MainPage)
                            @Html.ValidationMessageFor(model => model.MainPage)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.State)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.State)
                            @Html.ValidationMessageFor(model => model.State)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ImageState)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ImageState)
                            @Html.ValidationMessageFor(model => model.ImageState)
                        </div>



                        <div class="editor-label">
                            @Html.LabelFor(model => model.Ordering)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Ordering)
                            @Html.ValidationMessageFor(model => model.Ordering)
                        </div>


                        <p>
                            <input class="btn btn-success btn-block" type="submit" value="Save" />
                        </p>
                    </fieldset>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>



</div>




