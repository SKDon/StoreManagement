@model StoreManagement.Data.Entities.Content

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Content</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.StoreId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StoreId)
            @Html.ValidationMessageFor(model => model.StoreId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CategoryId)
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImagePath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImagePath)
            @Html.ValidationMessageFor(model => model.ImagePath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MainPage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MainPage)
            @Html.ValidationMessageFor(model => model.MainPage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImageState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImageState)
            @Html.ValidationMessageFor(model => model.ImageState)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Ordering)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Ordering)
            @Html.ValidationMessageFor(model => model.Ordering)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lang)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lang)
            @Html.ValidationMessageFor(model => model.Lang)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
