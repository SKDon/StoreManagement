@model StoreManagement.Data.Entities.Content

@{
    ViewBag.Title = "Edit";
    int storeId = Model != null ? Model.StoreId : 0;
    int categoryId = Model != null ? Model.CategoryId : 0;
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Content</legend>

        @Html.HiddenFor(model => model.Id)

      
<div class="editor-label control-group">
    @Html.LabelFor(model => model.StoreId, new { @class = "control-label" })
</div>
<div class="editor-field controls">
    @Html.Action("StoresDropDown", "Stores", new { storeId })
</div>


        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
        <div class="editor-field">
           @Html.Action("CategoriesRadioButton", "Categories", new { categoryId })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImagePath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImagePath)
            @Html.ValidationMessageFor(model => model.ImagePath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MainPage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MainPage)
            @Html.ValidationMessageFor(model => model.MainPage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ImageState)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImageState)
            @Html.ValidationMessageFor(model => model.ImageState)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Ordering)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Ordering)
            @Html.ValidationMessageFor(model => model.Ordering)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lang)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lang)
            @Html.ValidationMessageFor(model => model.Lang)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            
<input class="form-control" type="text" name="CreatedDate" datatype-datetime="d" value="@(Model.CreatedDate > new DateTime(1,1,2) ? Model.CreatedDate.ToString("MM/dd/yyyy hh:mm tt") : "")" />


 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </div>
     
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    
    <script type="text/javascript">
        $(document).ready(function () {
            console.log("jquery is working");
           // $("#Description").htmlarea();
            
            $("#Description").htmlarea({
                // Override/Specify the Toolbar buttons to show
                toolbar: [
                    ["bold", "italic", "underline", "|", "forecolor"],
                    ["p", "h1", "h2", "h3", "h4", "h5", "h6"],
                    ["link", "unlink", "|", "image"],
                    [{
                        // This is how to add a completely custom Toolbar Button
                        css: "custom_disk_button",
                        text: "Save",
                        action: function (btn) {
                            // 'this' = jHtmlArea object
                            // 'btn' = jQuery object that represents the <A> "anchor" tag for the Toolbar Button
                            console.log('SAVE!\n\n' + this.toHtmlString());
                        }
                    }]
                ],

                // Override any of the toolbarText values - these are the Alt Text / Tooltips shown
                // when the user hovers the mouse over the Toolbar Buttons
                // Here are a couple translated to German, thanks to Google Translate.
                toolbarText: $.extend({}, jHtmlArea.defaultOptions.toolbarText, {
                    "bold": "fett",
                    "italic": "kursiv",
                    "underline": "unterstreichen"
                }),

                // Specify a specific CSS file to use for the Editor
                css: "style//jHtmlArea.Editor.css",

                // Do something once the editor has finished loading
                loaded: function () {
                    //// 'this' is equal to the jHtmlArea object
                    //alert("jHtmlArea has loaded!");
                    //this.showHTMLView(); // show the HTML view once the editor has finished loading
                }
            });
            

        });
    </script>

}
