@using GridMvc.Html
@using GridMvc.Sorting
@model IEnumerable<StoreManagement.Data.Entities.Content>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<div>
    @Html.Action("StoresFilter", "Stores", new { actionName = "Index", controllerName = "Products" })
</div>
         @Html.ActionLink("Create",  "SaveOrEdit", "Products", new { id =  0}, new{@class="btn btn-primary"})
@Html.Grid(Model).Named("contentGrid").Columns(columns =>
    {
        columns.Add(o => o.Id, true);
             columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(d =>
                    @<b>
                        @Html.ActionLink("Edit",  "SaveOrEdit", "Products", new { id = d.Id }, new{@class="btn btn-primary"})
                    </b>);
    
 
        
        
        columns.Add(c => c.Name)
            .Titled("Title")
            .Filterable(true)
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(o => Html.ActionLink(o.Name, "Details", "Products", new { Id = o.Id }, null).ToHtmlString());

            
        columns.Add(o => o.CreatedDate)
                        .Titled("Date")
                        .Sortable(true)
                        .SortInitialDirection(GridSortDirection.Descending);
 
    }).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(15).Sortable().Filterable().WithMultipleFilters()


