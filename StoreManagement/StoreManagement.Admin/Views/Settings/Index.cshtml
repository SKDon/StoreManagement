@using GridMvc.Html
@using StoreManagement.Data.Entities
@using StoreManagement.Data.GeneralHelper
@model IEnumerable<StoreManagement.Data.Entities.Setting>

@{
    ViewBag.Title = "Index";
        // Store s = ViewBag.Store;
    string storeId = Request.QueryString["storeId"].ToStr();
}
 

<input type="hidden" name="StoreId" value="@storeId" id="StoreId"/>

<div class="col-md-12">
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">
                    <h4>Settings</h4>
                </div>
            </div>
            <div class="bootstrap-admin-panel-content">
                     <div>
                            @Html.Action("StoresFilter", "Stores", new { actionName = "Index", controllerName = "Settings" })
                        </div>
                @{
                    Setting item = Model.FirstOrDefault(r => r.SettingKey.Equals("StoreMetaKey", StringComparison.InvariantCultureIgnoreCase));
                    if (item == null)
                    {
                        item = new Setting();
                        item.SettingKey = "StoreMetaKey";
                        item.Id = 0;
                    } 
                    
                    @Html.Partial("pSettingTextBox",
                            item,
                            new ViewDataDictionary(ViewData)
                            {
                                {"StoreSettingTitle", "Meta Key"}
                            });


                              item = Model.FirstOrDefault(r => r.SettingKey.Equals("GoogleAnalytics", StringComparison.InvariantCultureIgnoreCase));
                              if (item == null)
                              {
                                  item = new Setting();
                                  item.SettingKey = "GoogleAnalytics";
                                  item.Id = 0;
                              } 
                    
                    @Html.Partial("pSettingTextBox",
                            item,
                            new ViewDataDictionary(ViewData)
                            {
                                {"StoreSettingTitle", "Google Analytics"}
                            });

                }

                <p>
                    <input class="btn btn-success btn-block btn-lg" id="SaveSetttings" type="submit" value="Save" />
                </p>

            </div>
        </div>
    </div>
</div>
 



@section scripts
{


    <script>
        
        function Setting(settingId, settingKey, settingValue) {
            var m = this;
            m.Id = settingId;
            m.SettingKey = settingKey;
            m.SettingValue = settingValue;

            return m;
        }



        $(document).ready(function () {
            $("#SaveSetttings").on("click", handleAllSettings);
        });


        function handleAllSettings(e) {
            var allSettings = [];

            $('[data-setting-id]').each(function () {
                var settingId = $(this).attr('data-setting-id');
                var settingKey = $(this).attr('data-setting-key');
                var settingValue = $(this).val();

                var item = new Setting(settingId, settingKey, settingValue);
                allSettings.push(item);
            });

            console.log(allSettings);
              
            var postData = JSON.stringify({ "settings": allSettings, "storeId": $("#StoreId").val() });
            $.ajax({
                type: "POST",
                url: "/Ajax/SetSettings",
                data: postData,
                success: function(data) {
                    
                },
                error: function (jqXHR, exception) {
                    if (jqXHR.status === 0) {
                        console.error('Not connect.\n Verify Network.');
                    } else if (jqXHR.status == 404) {
                        console.error('Requested page not found. [404]');
                    } else if (jqXHR.status == 500) {
                        console.error('Internal Server Error [500].');
                    } else if (exception === 'parsererror') {
                        console.error('Requested JSON parse failed.');
                    } else if (exception === 'timeout') {
                        console.error('Time out error.');
                    } else if (exception === 'abort') {
                        console.error('Ajax request aborted.');
                    } else {
                        console.error('Uncaught Error.\n' + jqXHR.responseText);
                    }
                },
                contentType: "application/json",
                dataType: "json"
            });
        }
        
    </script>
}




