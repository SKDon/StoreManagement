@using GridMvc.Html
@using GridMvc.Sorting
@using StoreManagement.Data.GeneralHelper
@model List<StoreManagement.Data.Entities.Store>

@{
    ViewBag.Title = "Index";
    int pageSizeNumber = Request.QueryString["GridPageSize"].ToInt();
    pageSizeNumber = pageSizeNumber == 0 ? 50 : pageSizeNumber;
}






<div class="col-md-12">
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">
                    <h4>Stores Management</h4>
                </div>
            </div>
            <div class="bootstrap-admin-panel-content">



                <div class="panel panel-info">
                    <div class="panel-body">
                        <div class="row">
                            <span class="col-md-3">
                                @Html.ActionLink("Create", "SaveOrEdit", "Stores", new { id = 0 }, new { @class = "btn btn-primary btn-block" })
                            </span>
                            <span class="col-md-9">
                                @Html.Partial("pSearchForm")
                            </span>
                        </div>
                    </div>

                </div>




                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <span class="col-md-6">
                                <span class="label "><span class="badge text-danger text-large">@Model.Count() </span>


                                    Records exists  
                                </span>

                            </span>
                            <span class="col-md-3">
                                <p class=" text-right">Grid Paging Number</p>
                            </span>
                            <span class="col-md-3">
                                <select name="GridListItemSize" class="form-control dropdown-toggle" id="GridListItemSize">
                                    <option class="text-info" value="25">25</option>
                                    <option selected="selected" class="text-info" value="50">50</option>
                                    <option class="text-info" value="100">100</option>
                                    <option class="text-info" value="250">250</option>
                                    <option class="text-info" value="500">500</option>
                                    <option class="text-info" value="1000">1000</option>
                                </select>
                            </span>
                        </div>


                    </div>
                    @Html.Grid(Model).Named("storesGrid").Columns(columns =>
    {


        columns.Add().Encoded(false).
            Sanitized(false).
            SetWidth(10).
            RenderValueAs(o => String.Format("<input gridkey-id='{0}'  name='checkboxGrid' type='checkbox'>", o.Id));


        columns.Add(o => o.Id, false);

        columns.Add()
           .Encoded(false)
           .Sanitized(false)
           .SetWidth(30)
           .RenderValueAs(d =>
               @<b>
                   @Html.ActionLink(" ", "SaveOrEdit", "Stores", new { id = d.Id }, new { @class = "btn btn-primary btn-sm     glyphicon glyphicon-pencil glyphicon-white" })
               </b>);

        columns.Add()
                   .Encoded(false)
                   .Sanitized(false)
                   .SetWidth(30)
                   .RenderValueAs(d =>
                       @<b>
                           @Html.ActionLink(" ", "Details", "Stores", new { id = d.Id }, new { @class = "btn btn-default btn-sm     glyphicon glyphicon-eye-open" })
                       </b>);

        columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d =>
@<b>
    @Html.ActionLink(" ", "Delete", "Stores", new { id = d.Id }, new { @class = "btn btn-danger btn-sm glyphicon glyphicon-remove glyphicon-white" })
</b>);


        columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d =>
   @<b>
       @Html.ActionLink(" Settings", "Settings", "Stores", new { storeId = d.Id }, new { @class = "btn btn-default glyphicon glyphicon-wrench" })
   </b>);

        columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(d =>
   @<b>
       @Html.ActionLink(" Users", "Users", "Stores", new { storeId = d.Id }, new { @class = "btn btn-default glyphicon glyphicon-user" })
   </b>);


        columns.Add(c => c.Name)
            .Titled("Title")
            .Filterable(true)
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(o => Html.ActionLink(o.Name, "Details", "Stores", new { Id = o.Id }, null).ToHtmlString());






        columns.Add(c => c.Domain)
         .Titled("Domain")
         .Filterable(true)
         .Sanitized(false)
         .Encoded(false)
        .RenderValueAs(d =>
                                                  @<b>

                                                      <a class="btn btn-info glyphicon glyphicon-globe"    

			target="_blank"  href="@String.Format("http://{0}", d.Domain)"><b style='color: black'>@d.Domain  </b></a>
                                                  </b>);



        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(d =>
                @<b>
                    @Html.ActionLink("Copy Store", "CopyStore", "Stores", new { id = d.Id }, new { @class = "glyphicon glyphicon-copy btn btn-warning btn-block" })
                </b>);
                        

        columns.Add(o => o.CreatedDate)
              .Titled("Date")
              .Sortable(true).
              RenderValueAs(o => String.Format("{0}", o.CreatedDate.ToShortDateString()))
              .SortInitialDirection(GridSortDirection.Descending);


    }).SetRowCssClasses(item => item.Id % 2 == 0 ? "warning" : string.Empty).WithPaging(pageSizeNumber).Sortable().Filterable().WithMultipleFilters().Selectable(false)



                </div>



            </div>
        </div>
    </div>



</div>


