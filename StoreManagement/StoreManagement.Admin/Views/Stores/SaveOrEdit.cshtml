@using System.Web.Mvc.Html
@using StoreManagement.Data.Entities
@model StoreManagement.Data.Entities.Store

@{
    ViewBag.Title = "Edit";
    List<Category> storeCategories = ViewBag.StoreCategories;
    List<StorePageDesign> storePageDesigns = ViewBag.StorePageDesigns;
}




<div class="col-md-12">
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="text-muted bootstrap-admin-box-title">Create New Stores</div>
            </div>
            <div class="bootstrap-admin-panel-content">

                @using (Html.BeginForm("SaveOrEdit", "Stores", FormMethod.Post, new { enctype = "multipart/form-data" }))
                { 
                    
                 
                    @Html.ValidationSummary(true)
                    <fieldset>
                        <legend>Create Store</legend>
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.GoogleDriveCertificateP12FileName)
                        @Html.HiddenFor(model => model.GoogleDriveCertificateP12RawData)

                        <div class="editor-label">
                            @Html.LabelFor(model => model.CategoryId)

                            @Html.DropDownListFor(model => model.CategoryId, new SelectList(storeCategories,
                                                                                            "Id", "Name", Model.CategoryId), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId)
                        </div>
                        
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StorePageDesignId)

                            @Html.DropDownListFor(model => model.StorePageDesignId, new SelectList(storePageDesigns,
                                        "Id", "Name", Model.StorePageDesignId), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId)
                        </div>


                        <div class="editor-label">
                            @Html.LabelFor(model => model.Name)

                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Domain)

                            @Html.TextBoxFor(model => model.Domain, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Domain)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Layout)

                            @Html.TextBoxFor(model => model.Layout, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Layout)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDriveClientId)

                            @Html.TextBoxFor(model => model.GoogleDriveClientId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDriveClientId)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDriveServiceAccountEmail)

                            @Html.TextBoxFor(model => model.GoogleDriveServiceAccountEmail, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDriveServiceAccountEmail)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDriveUserEmail)

                            @Html.TextBoxFor(model => model.GoogleDriveUserEmail, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDriveUserEmail)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDriveUserEmailPassword)

                            @Html.TextBoxFor(model => model.GoogleDriveUserEmailPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDriveUserEmailPassword)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDrivePassword)

                            @Html.TextBoxFor(model => model.GoogleDrivePassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDrivePassword)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.GoogleDriveFolder)

                            @Html.TextBoxFor(model => model.GoogleDriveFolder, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GoogleDriveFolder)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IsCacheEnable)

                            @Html.CheckBoxFor(model => model.IsCacheEnable, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IsCacheEnable)
                        </div>
                        <div class="editor-label">
                            <label for="Certificate">Google Drive  Certificate P12 File </label>
                            <input type="file" name="CertUpload" />
                        </div>
                        <p>
                            <input class="btn btn-success btn-block btn-lg" type="submit" value="Save" />
                        </p>
                    </fieldset>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-lg btn-block" })
                </div>


            </div>
        </div>
    </div>



</div>


@section scripts
{
    <script>


        $(document).ready(function () {

            //   $('[chosen-selection-box="multiple"]').select2();
            $('#CategoryId').select2({

            });
        });


    </script>
}





